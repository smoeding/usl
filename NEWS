CHANGES in `usl' VERSION 3.0.0 (2020-02-29)

* Extend `scalability()` function to accept additional parameter `gamma`.
* Removed R-squared in `summary()` output as it is not valid for nonlinear
  regression.
* Implemented method `sigma` to extract the residual standard deviation.
* Implemented methods `optimal.scalability()` and `limit.scalability()`
  to determine scalability bounds.
* Print scalability bounds in `summary()` output and optionally include these
  bounds in the `plot()` output.


CHANGES in `usl' VERSION 2.0.0 (2020-01-08)

* Version 2.0.0 is a major update that includes some breaking changes. The
  Universal Scalability Law has evolved from the original two coefficient
  formula into a three coefficient formula to obviate the need for parameter
  normalization. The following changes are made to align the package with
  the current use:
  - The previously used coefficients `sigma` and `kappa` are renamed to
    `alpha` and `beta`.
  - A new coefficient `gamma` is introduced. This coefficient corresponds
    to the scale factor calculated in earlier versions when parameter
    normalization was used.
  - The `default` method of the `usl()` function is no longer a separate
    solver method as normalization has been removed. Calling the function
    with either no or the `default` value for the `method` parameter will
    internally use the `nlxb` implementation.


CHANGES in `usl' VERSION 1.8.0 (2017-08-07)

* The `nlsr` package will replace the older `nlmrt` package. The package has
  been updated accordingly.


CHANGES in `usl' VERSION 1.7.0 (2016-10-13)

* The `summary()' command now shows the t-value and the two sided p-value for
  the coefficients sigma and kappa.


CHANGES in `usl' VERSION 1.6.0 (2016-06-17)

* Remove unused parameter `R' from the signature of the `confint()' function.

* Add additional section about multivalued data to vignette.


CHANGES in `usl' VERSION 1.5.0 (2016-02-25)

* Use method `nlxb' as fallback if the value for the scale factor is missing
  in the data and the `default' method is used. A warning message is printed
  in this case. This is more user-friendly than the error message given
  before.

* Remove unused parameter `R' from the signature of the `usl()' function.


CHANGES in `usl' VERSION 1.4.1 (2014-12-29)

* Depend on `methods' package instead of importing it. This fixes a problem
  with calling `usl()' from Rscript.

* Minor fixes concerning coding style and typos.


CHANGES in `usl' VERSION 1.4.0 (2014-11-04)

* Add new method `overhead()' to calculate the overhead in execution time
  caused by contention and coherency delays.


CHANGES in `usl' VERSION 1.3.1 (2014-06-20)

* Fix vignette for TeXLive 2014.


CHANGES in `usl' VERSION 1.3.0 (2014-06-02)

* The estimation of standard errors for the coefficients has been rewritten.
  Bootstrapping is no longer used for the calculation. Therefore the argument
  `R' for the `usl()' function and the argument `type' for the `confint()'
  function have been deprecated. The arguments will be removed in the next
  release.

* Added coefficient standard errors and residual standard error to the summary
  output.

* Added implementation for the df.residual() function to get the degrees of
  freedom for the model.

* Removed misleading calculation of deviance.

* Used roxygen2 4.0.1 to generate the documentation.

* Added a new demo data set `oracledb'.


CHANGES in `usl' VERSION 1.2.2 (2014-04-03)

* Use roxygen2 3.1 to generate documentation.

* Fix handling of unsorted input data frame for method="default".


CHANGES in `usl' VERSION 1.2.1 (2013-08-12)

* Adapt to `nlmrt' version 2013-8.10


CHANGES in `usl' VERSION 1.2.0 (2013-04-29)

* Added function `confint()' to estimate parameter confidence intervals.


CHANGES in `usl' VERSION 1.1.0 (2013-02-26)

* Added a package vignette.

* Use `Import' instead of `Depend' for the used packages.

* Function `efficiency()' now returns a named vector. The names are the
  values of the independent variable, cf. `fitted()' or `residuals()'.


CHANGES in `usl' VERSION 1.0.0 (2013-02-10)

* Initial release on CRAN
